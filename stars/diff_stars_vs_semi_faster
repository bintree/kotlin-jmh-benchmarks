1,3c1,3
< Compiled from "Stars.kt"
< public final class org.jetbrains.benchmarks.StarsKotlin$AVLTree$NodeGetter implements kotlin.jvm.internal.KObject {
<   public final <K extends java/lang/Object, D extends java/lang/Object> int height(org.jetbrains.benchmarks.StarsKotlin$AVLTree$Node<K, D>);
---
> Compiled from "StarsSemiFaster.kt"
> public final class org.jetbrains.benchmarks.StarsKotlinSemiFaster$AVLTree$NodeGetter implements kotlin.jvm.internal.KObject {
>   public final <K extends java/lang/Object, D extends java/lang/Object> int height(org.jetbrains.benchmarks.StarsKotlinSemiFaster$AVLTree$Node<K, D>);
5,20c5,19
<        0: aload_1       
<        1: dup           
<        2: ifnull        14
<        5: invokevirtual #27                 // Method org/jetbrains/benchmarks/StarsKotlin$AVLTree$Node.getHeight:()I
<        8: invokestatic  #33                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
<       11: goto          16
<       14: pop           
<       15: aconst_null   
<       16: dup           
<       17: ifnull        29
<       20: checkcast     #35                 // class java/lang/Number
<       23: invokevirtual #38                 // Method java/lang/Number.intValue:()I
<       26: goto          31
<       29: pop           
<       30: iconst_0      
<       31: ireturn       
---
>        0: iconst_1      
>        1: aload_1       
>        2: ifnonnull     7
>        5: pop           
>        6: iconst_0      
>        7: ifeq          20
>       10: aload_1       
>       11: invokevirtual #8                  // Method org/jetbrains/benchmarks/StarsKotlinSemiFaster$AVLTree$Node.getHeight:()I
>       14: invokestatic  #59                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
>       17: goto          24
>       20: iconst_0      
>       21: invokestatic  #59                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
>       24: checkcast     #38                 // class java/lang/Number
>       27: invokevirtual #7                  // Method java/lang/Number.intValue:()I
>       30: ireturn       
22c21
<   public final <K extends java/lang/Object, D extends java/lang/Object> int size(org.jetbrains.benchmarks.StarsKotlin$AVLTree$Node<K, D>);
---
>   public final <K extends java/lang/Object, D extends java/lang/Object> int size(org.jetbrains.benchmarks.StarsKotlinSemiFaster$AVLTree$Node<K, D>);
24,39c23,37
<        0: aload_1       
<        1: dup           
<        2: ifnull        14
<        5: invokevirtual #45                 // Method org/jetbrains/benchmarks/StarsKotlin$AVLTree$Node.getSize:()I
<        8: invokestatic  #33                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
<       11: goto          16
<       14: pop           
<       15: aconst_null   
<       16: dup           
<       17: ifnull        29
<       20: checkcast     #35                 // class java/lang/Number
<       23: invokevirtual #38                 // Method java/lang/Number.intValue:()I
<       26: goto          31
<       29: pop           
<       30: iconst_0      
<       31: ireturn       
---
>        0: iconst_1      
>        1: aload_1       
>        2: ifnonnull     7
>        5: pop           
>        6: iconst_0      
>        7: ifeq          20
>       10: aload_1       
>       11: invokevirtual #32                 // Method org/jetbrains/benchmarks/StarsKotlinSemiFaster$AVLTree$Node.getSize:()I
>       14: invokestatic  #59                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
>       17: goto          24
>       20: iconst_0      
>       21: invokestatic  #59                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
>       24: checkcast     #38                 // class java/lang/Number
>       27: invokevirtual #7                  // Method java/lang/Number.intValue:()I
>       30: ireturn       
41c39
<   public org.jetbrains.benchmarks.StarsKotlin$AVLTree$NodeGetter();
---
>   public org.jetbrains.benchmarks.StarsKotlinSemiFaster$AVLTree$NodeGetter();
44c42
<        1: invokespecial #50                 // Method java/lang/Object."<init>":()V
---
>        1: invokespecial #55                 // Method java/lang/Object."<init>":()V
